{
  "name": "-y",
  "version": "1.0.0",
  "description": "In this exercise you will be using a test driven development (TDD) approach to implement a `strictEqual()` function. The `strictEqual()` function will work the way the `===` operator does but you are not allowed to use this operator. For example, `strictEqual(5, '5')` would return `false` but `strictEqual('a', 'a')` would return `true`.",
  "main": ".eslintrc.js",
  "scripts": {
    "lint": "eslint --format codeframe . --fix ",
    "start": "node index.js",
    "test": "mocha ./tests/ *.test.js || true"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/marcmwebdev/tdd-strict-equal.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/marcmwebdev/tdd-strict-equal/issues"
  },
  "homepage": "https://github.com/marcmwebdev/tdd-strict-equal#readme",
  "devDependencies": {
    "chai": "^4.3.4",
    "mocha": "^9.1.3"
  },
  "directories": {
    "test": "tests"
  },
  "dependencies": {}
}
